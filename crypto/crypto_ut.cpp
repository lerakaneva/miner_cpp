#include <gtest/gtest.h>
#include <crypto/crypto.h>

using crypto::CalculateGeneralHash;

TEST(Crypto, CalculateGeneralHashEmptyData) {
    std::vector<unsigned char> expected = {
        0xe3, 0xb0, 0xc4, 0x42, 0x98, 0xfc, 0x1c, 0x14,
        0x9a, 0xfb, 0xf4, 0xc8, 0x99, 0x6f, 0xb9, 0x24,
        0x27, 0xae, 0x41, 0xe4, 0x64, 0x9b, 0x93, 0x4c,
        0xa4, 0x95, 0x99, 0x1b, 0x78, 0x52, 0xb8, 0x55
    };
    std::vector<unsigned char> result = crypto::CalculateGeneralHash("", 0);
    EXPECT_EQ(result, expected);
}

TEST(Crypto, CalculateGeneralHashNotEmptyData) {
    const char* data = "abc";
    std::vector<unsigned char> expected = {
        0xba, 0x78, 0x16, 0xbf, 0x8f, 0x01, 0xcf, 0xea,
        0x41, 0x41, 0x40, 0xde, 0x5d, 0xae, 0x22, 0x23,
        0xb0, 0x03, 0x61, 0xa3, 0x96, 0x17, 0x7a, 0x9c,
        0xb4, 0x10, 0xff, 0x61, 0xf2, 0x00, 0x15, 0xad
    };
    std::vector<unsigned char> result = crypto::CalculateGeneralHash(data, strlen(data));
    EXPECT_EQ(result, expected);
}